{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/bug-list/bug-list.component.html","webpack:///./src/app/bug-list/bug-list.component.ts","webpack:///./src/app/create-bug/create-bug.component.css","webpack:///./src/app/create-bug/create-bug.component.html","webpack:///./src/app/create-bug/create-bug.component.ts","webpack:///./src/app/services/bug.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { CreateBugComponent } from './create-bug/create-bug.component';\nimport { BugListComponent } from './bug-list/bug-list.component';\n\nconst routes: Routes = [\n  { path: 'create', component: CreateBugComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div>\\r\\n  <h1>\\r\\n    {{ title }}\\r\\n  </h1>\\r\\n</div>\\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  public title = 'Bug Tracker';\r\n  public apiAvailability: boolean = false;\r\n  private apiUri: string;\r\n\r\n  /**\r\n   *\r\n   */\r\n  constructor() {\r\n    this.apiUri = \"\";\r\n  }\r\n\r\n  public testApi() {\r\n    this.apiAvailability = true;\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BugListComponent } from './bug-list/bug-list.component';\r\nimport { HttpClientModule } from '../../node_modules/@angular/common/http';\r\nimport { CreateBugComponent } from './create-bug/create-bug.component';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    BugListComponent,\r\n    CreateBugComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BsDropdownModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    ModalModule.forRoot()\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<div *ngIf=\\\"!getBugsError\\\">\\r\\n  <div ng-if=\\\"retrievedBugs && !bugs\\\">\\r\\n    <h2>Great news! There aren't any open bugs right now.</h2>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"retrivedBugs && bugs\\\">\\r\\n    <ul class=\\\"bugs\\\">\\r\\n      <li *ngFor=\\\"let bug of bugs\\\" class=\\\"bug\\\">\\r\\n        {{bug.title}}\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"getBugsError\\\">\\r\\n  Oops! An error occurred when retrieving bugs. Please try again by hitting the search button or trying again later.\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BugService } from '../services/bug.service';\r\nimport { Bug } from '../models/bug.model';\r\n\r\n@Component({\r\n  selector: 'app-bug-list',\r\n  templateUrl: './bug-list.component.html'\r\n})\r\nexport class BugListComponent implements OnInit {\r\n  public bugs: Bug[];\r\n\r\n  public getBugsError: boolean = false;\r\n  public retrievedBugs: boolean = false;\r\n\r\n  constructor(private bugService: BugService) { }\r\n\r\n  ngOnInit() {\r\n    this.getBugs();\r\n  }\r\n\r\n  public getBugs() {\r\n    this.retrievedBugs = false;\r\n\r\n    this.bugService.getBugs().subscribe((e: Bug[]) => {\r\n      this.retrievedBugs = true;\r\n      this.bugs = e;\r\n    }, () => {\r\n      this.getBugsError = true;\r\n    })\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NyZWF0ZS1idWcvY3JlYXRlLWJ1Zy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h1>Create new bug</h1>\\n<h3>Please fill in the form below to create a new bug in the tracker</h3>\\n\\n<div class=\\\"form-group\\\">\\n  <label for=\\\"title\\\">Title</label>\\n  <input [(ngModel)]=\\\"title\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"title\\\" aria-describedby=\\\"title-help\\\" placeholder=\\\"Title\\\">\\n  <small id=\\\"title-help\\\" class=\\\"form-text text-muted\\\">A short overview of what the bug is. Max 100 characters.</small>\\n</div>\\n<div class=\\\"form-group\\\">\\n  <label for=\\\"description\\\">Description</label>\\n  <textarea [(ngModel)]=\\\"description\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"description\\\" placeholder=\\\"Description\\\" aria-describedby=\\\"description-help\\\">\\n  <small id=\\\"description-help\\\" class=\\\"form-text text-muted\\\">A more in-depth description of the bug. Max 2000 characters.</small>\\n</div>\\n<button (click)=\\\"createBug()\\\" class=\\\"btn btn-primary\\\">Submit</button>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-create-bug',\n  templateUrl: './create-bug.component.html',\n  styleUrls: ['./create-bug.component.css']\n})\nexport class CreateBugComponent implements OnInit {\n\n  public title: string;\n  public description: string;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  public createBug(): void {\n    // redirect to list page\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '../../../node_modules/@angular/common/http';\r\n\r\nimport { Bug } from '../models/bug.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BugService {\r\n  private headers: HttpHeaders;\r\n  private bugApiUri: string = 'http://localhost:51188/api/bugs'\r\n\r\n  constructor(private http: HttpClient) {\r\n    // this.headers = new HttpHeaders({'Content-Type': 'application/json; charset=utf-8'});\r\n  }\r\n\r\n  public getBugs() {\r\n    return this.http.get(this.bugApiUri + '/true');\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}